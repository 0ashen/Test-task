{"version":3,"sources":["api/apiEntity.interface.ts","components/Navigation/Navigation.tsx","api/getData.api.ts","components/DialogAddUser/DialogAddUser.tsx","components/UsersTable/UsersTable.interface.ts","components/UsersTable/children/MaterialUiVirtualizedTable/MaterialUiVirtualizedTable.tsx","components/UsersTable/UsersTable.tsx","pages/UsersOverview/UsersOverview.tsx","pages/Welcome/Welcome.tsx","App/App.tsx","reportWebVitals.ts","index.tsx","components/UsersTable/UsersTable.module.scss","App/App.module.scss","pages/UsersOverview/UsersOverview.module.scss"],"names":["EntityUserGroups","routes","redirect","from","to","label","url","Navigation","className","styles","navigation","ButtonGroup","variant","map","route","Button","component","NavLink","activeClassName","method","getUsers","axios","DialogAddUser","props","React","useState","open","setOpen","department","setDepartment","name","setName","lastName","setLastName","handleCloseDialog","checkValidation","handleValidation","setUsersState","state","newUsersList","id","usersAll","length","first_name","last_name","group","usersSortedByGroup","sortToSubArraysProcedure","Fab","color","onClick","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","type","required","value","error","onChange","event","target","FormControl","InputLabel","Select","labelId","MenuItem","Object","keys","el","DialogActions","SortTypes","MaterialUIVirtualizedTable","headerRowRenderer","style","columns","paddingRight","tableRowHeader","rowRenderer","index","key","tableRowEven","headerCellRenderer","dataKey","sortByField","isActive","sortOrder","DESC","isRotate","sortUsers","this","rowHeight","headerHeight","tableProps","width","height","rowClassName","tableRow","headerClassName","tableCellHeader","headerStyle","lineHeight","disableHeader","window","innerWidth","justDesktop","other","headerRenderer","cellRenderer","cellData","tableCell","join","PureComponent","UsersTable","users","usersList","ASC","setUsers","useEffect","oldState","Paper","paper","rowCount","rowGetter","sortByFieldNext","sortOrderNext","sort","a","b","numeric","UsersOverview","isViewByGroup","setIsViewByGroup","usersState","usersListWrapper","headerCaption","FormControlLabel","checkbox","control","Switch","checked","groupName","then","res","data","CircularProgress","resultArrays","i","push","Welcome","textAlign","fontStyle","fontWeight","href","rel","defaultProps","App","withRouter","main","exact","path","redirectTo","githubLink","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2a4f499c.chunk.js","sourcesContent":["export interface EntityUser {\r\n    readonly id: number,\r\n    readonly first_name: string,\r\n    readonly last_name: string,\r\n    readonly group: EntityUserGroups | null,\r\n}\r\n\r\nexport enum EntityUserGroups {\r\n    'Accounting department' = 'Accounting department',\r\n    'Development department' = 'Development department',\r\n    'Human Resources Department' = 'Human Resources Department',\r\n    Management = 'Management'\r\n}\r\n","import React from 'react'\r\nimport styles from '../../App/App.module.scss'\r\nimport { Button, ButtonGroup } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { EntityRedirect, EntityRoute } from './Navigation.interface'\r\n\r\nexport const routes: (EntityRedirect | EntityRoute)[] = [\r\n    {\r\n        redirect: true,\r\n        from: '/',\r\n        to: '/welcome',\r\n    },\r\n    {\r\n        label: 'welcome',\r\n        url: '/welcome',\r\n    },\r\n    {\r\n        label: 'user overview',\r\n        url: '/user-overview',\r\n    },\r\n]\r\n\r\nexport function Navigation(): JSX.Element {\r\n    return (\r\n        <nav className={styles.navigation}>\r\n            <ButtonGroup variant=\"contained\">\r\n                {routes.map((route: EntityRedirect | EntityRoute) => {\r\n                    if ('redirect' in route) {\r\n                        return null\r\n                    }\r\n                    return (\r\n                        <Button\r\n                            component={NavLink}\r\n                            to={route.url}\r\n                            variant=\"contained\"\r\n                            activeClassName=\"MuiButton-containedPrimary\"\r\n                            key={route.url}\r\n                        >\r\n                            {route.label}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </ButtonGroup>\r\n        </nav>\r\n    )\r\n}\r\n","import axios, { AxiosPromise, AxiosRequestConfig } from 'axios'\r\nimport { EntityUser } from './apiEntity.interface'\r\n\r\nfunction getData<T>(url: string, method: AxiosRequestConfig['method']): () => AxiosPromise<T> {\r\n    return (): AxiosPromise<T> => axios({ method, url })\r\n}\r\n\r\nexport const getUsers = getData<EntityUser[]>(\r\n    (process.env.NODE_ENV === 'production' ? '/Test-task-Benovate.ru' : '') + '/MOCK_DATA.json',\r\n    'get',\r\n)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { Fab, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\r\nimport { EntityUserGroups } from '../../api/apiEntity.interface'\r\nimport { DialogAddUserProps } from './DialogAddUser.interface'\r\nimport { AppState } from '../../App/App.interface'\r\nimport { sortToSubArraysProcedure } from '../../pages/UsersOverview/UsersOverview'\r\n\r\nexport function DialogAddUser(props: DialogAddUserProps) {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [department, setDepartment] = React.useState<EntityUserGroups | ''>('')\r\n    const [name, setName] = React.useState<string>('')\r\n    const [lastName, setLastName] = React.useState<string>('')\r\n\r\n    const handleOpenDialog = () => {\r\n        setOpen(true)\r\n        setDepartment('')\r\n        setName('')\r\n        setLastName('')\r\n    }\r\n    const handleCloseDialog = (checkValidation: boolean = false) => () => {\r\n        if (!checkValidation) {\r\n            setOpen(false)\r\n            return\r\n        }\r\n        if (handleValidation().name && handleValidation().name) {\r\n            props.setUsersState((state: AppState): AppState => {\r\n                const newUsersList = [\r\n                    {\r\n                        id: state.usersAll.length + 1,\r\n                        first_name: name,\r\n                        last_name: lastName,\r\n                        group: department || null,\r\n                    },\r\n                    ...state.usersAll,\r\n                ]\r\n                return {\r\n                    ...state,\r\n                    usersAll: newUsersList,\r\n                    usersSortedByGroup: sortToSubArraysProcedure(newUsersList),\r\n                }\r\n            })\r\n            setOpen(false)\r\n        }\r\n    }\r\n\r\n    const handleSelectDepartmentChange = (event: React.ChangeEvent<{ name?: string | undefined; value: unknown; }>): void => {\r\n        setDepartment(event.target.value as EntityUserGroups)\r\n    }\r\n\r\n    const handleSelectNameChange = (event: React.ChangeEvent<{ value: string }>): void => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleSelectLastNameChange = (event: React.ChangeEvent<{ value: string }>): void => {\r\n        setLastName(event.target.value)\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        return { name: !!(name.length), lastName: !!(lastName.length) }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Fab variant=\"extended\"\r\n                 color=\"secondary\"\r\n                 onClick={handleOpenDialog}\r\n            >\r\n                <PersonAddIcon />\r\n                <b>Add user</b>\r\n            </Fab>\r\n            <Dialog open={open}\r\n                    fullWidth\r\n                    onClose={handleCloseDialog()}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Add user\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField autoFocus\r\n                               margin=\"dense\"\r\n                               id=\"name\"\r\n                               label=\"Name\"\r\n                               type=\"text\"\r\n                               fullWidth\r\n                               required\r\n                               value={name}\r\n                               error={!handleValidation().name}\r\n                               onChange={handleSelectNameChange}\r\n                    />\r\n                    <TextField margin=\"dense\"\r\n                               id=\"lastName\"\r\n                               label=\"Last name\"\r\n                               type=\"text\"\r\n                               fullWidth\r\n                               required\r\n                               value={lastName}\r\n                               error={!handleValidation().lastName}\r\n                               onChange={handleSelectLastNameChange}\r\n                    />\r\n\r\n                    <FormControl fullWidth\r\n                                 margin=\"dense\">\r\n                        <InputLabel id=\"department\">\r\n                            Select department\r\n                        </InputLabel>\r\n                        <Select labelId=\"department\"\r\n                                id=\"department\"\r\n                                value={department}\r\n                                onChange={handleSelectDepartmentChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                None\r\n                            </MenuItem>\r\n                            {Object\r\n                                .keys(EntityUserGroups)\r\n                                .map((el: string): JSX.Element =>\r\n                                    <MenuItem value={EntityUserGroups[el as unknown as EntityUserGroups]}\r\n                                              key={el}>\r\n                                        {el}\r\n                                    </MenuItem>)\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialog()}\r\n                            color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleCloseDialog(true)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import { EntityUser } from '../../api/apiEntity.interface'\r\nimport { UserOverviewProps } from '../../pages/UsersOverview/UsersOverview.interface'\r\n\r\ndeclare module '@material-ui/core/styles/withStyles' {\r\n    // Augment the BaseCSSProperties so that we can control jss-rtl\r\n    interface BaseCSSProperties {\r\n        /*\r\n         * Used to control if the rule-set should be affected by rtl transformation\r\n         */\r\n        flip?: boolean;\r\n    }\r\n}\r\n\r\nexport enum SortTypes {\r\n    ASC,\r\n    DESC\r\n}\r\n\r\nexport interface UsersTableState {\r\n    users: EntityUser[];\r\n    sortByField: Exclude<keyof EntityUser, 'group'>;\r\n    sortOrder: SortTypes;\r\n}\r\n\r\nexport interface UsersTableProps {\r\n    usersList: EntityUser[]\r\n}\r\n\r\nexport type SortUsersHandler = (sortByFieldNext: UsersTableState['sortByField']) => void;\r\n","import React from 'react'\r\nimport { AutoSizer, Column, Table, TableHeaderProps, TableHeaderRowProps } from 'react-virtualized'\r\nimport styles from '../../UsersTable.module.scss'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport { TableRowProps } from 'react-virtualized/dist/es/Table'\r\nimport { MuiVirtualizedTableProps } from './MaterialUiVirtualizedTable.interface'\r\nimport { SortTypes } from '../../UsersTable.interface'\r\nimport { EntityUser } from '../../../../api/apiEntity.interface'\r\n\r\nexport class MaterialUIVirtualizedTable extends React.PureComponent<MuiVirtualizedTableProps> {\r\n    static defaultProps = {\r\n        headerHeight: 48,\r\n        rowHeight: window.innerWidth > 1000 ? 35 : 80,\r\n    }\r\n\r\n    private headerRowRenderer = ({ className, style, columns }: TableHeaderRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 className={className + ' ' + styles.tableRowHeader}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private rowRenderer = ({ className, style, columns, index, key }: TableRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 key={key}\r\n                 className={className + ' ' + (!(index % 2) ? styles.tableRowEven : '')}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private headerCellRenderer = (props: TableHeaderProps): JSX.Element => {\r\n        const { label, dataKey } = props as { label: string; dataKey: keyof EntityUser }\r\n        return (\r\n            <>\r\n                <span>{label}</span>\r\n                {\r\n                    dataKey !== 'group' ?\r\n                        <ArrowDownwardIcon\r\n                            className={\r\n                                (this.props.sortByField === dataKey ? styles.isActive : '') + ' ' +\r\n                                ((this.props.sortOrder === SortTypes.DESC) && (this.props.sortByField === dataKey) ? styles.isRotate : '')\r\n                            }\r\n                            onClick={() => this.props.sortUsers(dataKey)} />\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { columns, rowHeight, headerHeight, ...tableProps } = this.props\r\n\r\n        return (\r\n            <AutoSizer style={{ width: '100%' }}>\r\n                {({ height, width }: { height: number, width: number }): JSX.Element => (\r\n                    <Table\r\n                        height={height}\r\n                        width={width}\r\n                        rowHeight={rowHeight!}\r\n                        headerHeight={headerHeight!}\r\n                        rowClassName={styles.tableRow}\r\n                        headerClassName={styles.tableCellHeader}\r\n                        headerRowRenderer={this.headerRowRenderer}\r\n                        headerStyle={{ lineHeight: headerHeight + 'px' }}\r\n                        rowRenderer={this.rowRenderer}\r\n                        disableHeader={window.innerWidth < 1000}\r\n                        {...tableProps}\r\n                    >\r\n                        {columns.map(({ dataKey, justDesktop, label, ...other }, index) => {\r\n                            if (justDesktop && window.innerWidth < 1000) return null\r\n                            return (\r\n                                <Column\r\n                                    key={dataKey}\r\n                                    headerRenderer={this.headerCellRenderer}\r\n                                    cellRenderer={({ cellData }) => <><span>{label}</span><span>{cellData}</span></>}\r\n                                    dataKey={dataKey}\r\n                                    className={styles.tableCell}\r\n                                    headerClassName={[styles.tableCell, styles.tableCellHeader].join(' ')}\r\n                                    style={{ lineHeight: rowHeight + 'px' }}\r\n                                    label={label}\r\n                                    {...other}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { SortTypes, SortUsersHandler, UsersTableProps, UsersTableState } from './UsersTable.interface'\r\nimport { EntityUser } from '../../api/apiEntity.interface'\r\nimport styles from './UsersTable.module.scss'\r\nimport { MaterialUIVirtualizedTable } from './children/MaterialUiVirtualizedTable/MaterialUiVirtualizedTable'\r\n\r\nfunction UsersTable(props: UsersTableProps) {\r\n\r\n    const [{ users, sortByField, sortOrder }, setUsers] = useState<UsersTableState>(\r\n        {\r\n            users: props.usersList,\r\n            sortOrder: SortTypes.ASC,\r\n            sortByField: 'id',\r\n        },\r\n    )\r\n\r\n    const sortUsersHandler: SortUsersHandler = (sortByFieldNext: UsersTableState['sortByField']): void => {\r\n\r\n        const sortOrderNext = sortByFieldNext === sortByField && sortOrder === SortTypes.ASC ? SortTypes.DESC : SortTypes.ASC\r\n\r\n        users.sort((a: EntityUser, b: EntityUser) => {\r\n            if (a[sortByFieldNext] < b[sortByFieldNext]) {\r\n                return sortOrderNext === SortTypes.ASC ? -1 : 1\r\n            }\r\n            if (a[sortByFieldNext] > b[sortByFieldNext]) {\r\n                return sortOrderNext === SortTypes.ASC ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n\r\n        setUsers((state: UsersTableState): UsersTableState => ({\r\n            users: users,\r\n            sortOrder: sortOrderNext,\r\n            sortByField: sortByFieldNext,\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsers((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                users: props.usersList,\r\n            }\r\n        })\r\n    }, [props.usersList])\r\n\r\n    return (\r\n        <Paper className={styles.paper}>\r\n            <MaterialUIVirtualizedTable\r\n                rowCount={users.length}\r\n                rowGetter={({ index }: { index: number }) => users[index]}\r\n                sortUsers={sortUsersHandler}\r\n                sortByField={sortByField}\r\n                sortOrder={sortOrder}\r\n                columns={[\r\n                    {\r\n                        width: 100,\r\n                        label: 'ID',\r\n                        dataKey: 'id',\r\n                        numeric: true,\r\n                        justDesktop: true\r\n                    },\r\n                    {\r\n                        width: 300,\r\n                        label: 'Name',\r\n                        dataKey: 'first_name',\r\n                    },\r\n                    {\r\n                        width: 500,\r\n                        label: 'Last Name',\r\n                        dataKey: 'last_name',\r\n                    },\r\n                    {\r\n                        width: 500,\r\n                        label: 'Group',\r\n                        dataKey: 'group',\r\n                    },\r\n                ]}\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport { UsersTable }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CircularProgress, FormControlLabel, Switch } from '@material-ui/core'\r\nimport styles from './UsersOverview.module.scss'\r\nimport { EntityUser, EntityUserGroups } from '../../api/apiEntity.interface'\r\nimport { UserOverviewProps } from './UsersOverview.interface'\r\nimport { UsersSortedByGroup } from '../../App/App.interface'\r\nimport { getUsers } from '../../api/getData.api'\r\nimport { DialogAddUser } from '../../components/DialogAddUser/DialogAddUser'\r\nimport { UsersTable } from '../../components/UsersTable/UsersTable'\r\n\r\nexport function UsersOverview(props: UserOverviewProps): JSX.Element {\r\n\r\n    const [isViewByGroup, setIsViewByGroup] = useState<boolean>(false)\r\n\r\n    const toggleViewByGroupHandler = () => setIsViewByGroup(!isViewByGroup)\r\n\r\n    if (!props.usersState.usersAll.length) {\r\n        getUsers()\r\n            .then((res) => {\r\n                props.setUsersState({\r\n                    ...props.usersState,\r\n                    usersAll: res.data,\r\n                    usersSortedByGroup: sortToSubArraysProcedure(res.data),\r\n                })\r\n            })\r\n        return <CircularProgress />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.usersListWrapper}>\r\n            <div className={styles.headerCaption}>\r\n                <i>\r\n                    Count of items: {props.usersState.usersAll.length}\r\n                </i>\r\n                <FormControlLabel\r\n                    className={styles.checkbox}\r\n                    control={\r\n                        <Switch\r\n                            name=\"checkedB\"\r\n                            checked={isViewByGroup}\r\n                            onChange={toggleViewByGroupHandler}\r\n                        />\r\n                    }\r\n                    label=\"By groups\"\r\n                />\r\n                <DialogAddUser {...props} />\r\n            </div>\r\n            {\r\n                isViewByGroup ?\r\n                    Object\r\n                        .keys(props.usersState.usersSortedByGroup)\r\n                        .map((groupName): JSX.Element => {\r\n                            return <UsersTable key={groupName}\r\n                                               usersList={props.usersState.usersSortedByGroup[groupName as unknown as keyof UsersSortedByGroup]} />\r\n                        })\r\n                    :\r\n                    <UsersTable usersList={props.usersState.usersAll} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function sortToSubArraysProcedure(users: EntityUser[]): UsersSortedByGroup {\r\n    const resultArrays: UsersSortedByGroup = {\r\n        [EntityUserGroups['Accounting department']]: [],\r\n        [EntityUserGroups['Development department']]: [],\r\n        [EntityUserGroups['Human Resources Department']]: [],\r\n        [EntityUserGroups['Management']]: [],\r\n        withoutGroup: [],\r\n    }\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n        if (users[i].group) {\r\n            resultArrays[users[i].group as EntityUserGroups].push(users[i])\r\n        } else {\r\n            resultArrays['withoutGroup'].push(users[i])\r\n        }\r\n    }\r\n\r\n    return resultArrays\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport function Welcome(): JSX.Element {\r\n    return (\r\n        <article style={{\r\n            textAlign: 'center',\r\n        }}>\r\n            <h1 style={{\r\n                fontStyle: 'italic',\r\n                fontWeight: 'normal',\r\n            }}>\r\n                Welcome to my test task!\r\n            </h1>\r\n            <a href=\"https://github.com/0ashen/Test-task-Benovate.ru\"\r\n               target=\"_blank\"\r\n               rel=\"noreferrer\">\r\n                Go to <b>GITHUB</b>\r\n            </a>\r\n        </article>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styles from './App.module.scss'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport { EntityUserGroups } from '../api/apiEntity.interface'\r\nimport { Navigation, routes } from '../components/Navigation/Navigation'\r\nimport { UsersOverview } from '../pages/UsersOverview/UsersOverview'\r\nimport { Welcome } from '../pages/Welcome/Welcome'\r\nimport { EntityRedirect, EntityRoute } from '../components/Navigation/Navigation.interface'\r\nimport { AppProps, AppState } from './App.interface'\r\n\r\nfunction AppComponent(props: AppProps): JSX.Element {\r\n\r\n    const [usersState, setUsersState] = useState<AppState>({\r\n        usersAll: [],\r\n        usersSortedByGroup: {\r\n            [EntityUserGroups['Accounting department']]: [],\r\n            [EntityUserGroups['Development department']]: [],\r\n            [EntityUserGroups['Human Resources Department']]: [],\r\n            [EntityUserGroups['Management']]: [],\r\n            withoutGroup: [],\r\n        },\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <main className={styles.main}>\r\n                <Switch>\r\n                    <Route exact\r\n                           path={(routes[0] as EntityRedirect).from}>\r\n                        <Redirect to={ props.redirectTo || (routes[0] as EntityRedirect).to} />\r\n                    </Route>\r\n                    <Route path={(routes[1] as EntityRoute).url}>\r\n                        <Welcome />\r\n                    </Route>\r\n                    <Route path={(routes[2] as EntityRoute).url}>\r\n                        <UsersOverview usersState={usersState}\r\n                                       setUsersState={setUsersState} />\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n            <a className={styles.githubLink}\r\n               target=\"_blank\"\r\n               rel=\"noreferrer\"\r\n               href=\"https://github.com/0ashen/Test-task-Benovate.ru\">\r\n                <GitHubIcon />\r\n            </a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const App = withRouter(AppComponent)\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/styles/index.scss'\r\nimport { App } from './App/App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/Test-task-Benovate.ru' : '/'} >\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"UsersTable_paper__3sdua\",\"tableRow\":\"UsersTable_tableRow__1-re0\",\"tableRowHeader\":\"UsersTable_tableRowHeader__NR6Em\",\"tableRowEven\":\"UsersTable_tableRowEven__1tE6U\",\"tableCell\":\"UsersTable_tableCell__FaYyk\",\"tableCellHeader\":\"UsersTable_tableCellHeader__2Pvc2\",\"isActive\":\"UsersTable_isActive__1C-on\",\"isRotate\":\"UsersTable_isRotate__3JC7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"App_navigation__1MuY1\",\"main\":\"App_main__30TQO\",\"githubLink\":\"App_githubLink__1qpw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersListWrapper\":\"UsersOverview_usersListWrapper__1Lvuf\",\"headerCaption\":\"UsersOverview_headerCaption__UDExH\",\"checkbox\":\"UsersOverview_checkbox__1kdnB\"};"],"sourceRoot":""}