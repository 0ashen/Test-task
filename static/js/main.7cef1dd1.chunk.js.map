{"version":3,"sources":["components/Navigation/Navigation.tsx","api/getUsers.api.ts","components/UsersTable/UsersTable.interface.ts","components/UsersTable/children/MaterialUiVirtualizedTable/MaterialUiVirtualizedTable.tsx","components/UsersTable/UsersTable.tsx","api/api.interface.ts","components/DialogAddUser/DialogAddUser.tsx","pages/UsersList/UsersList.tsx","pages/Welcome.tsx","App/App.tsx","reportWebVitals.ts","index.tsx","components/UsersTable/UsersTable.module.scss","App/App.module.scss","pages/UsersList/UsersList.module.scss"],"names":["Pages","routes","text","url","welcome","Navigation","className","styles","navigation","ButtonGroup","variant","map","page","Button","component","NavLink","to","activeClassName","GET_USERS_URL_REMOTE","apiGetUsers","axios","method","SortTypes","MaterialUIVirtualizedTable","headerRowRenderer","style","columns","paddingRight","tableRowHeader","rowRenderer","index","key","tableRowEven","headerCellRenderer","props","label","dataKey","sortByField","isActive","sortOrder","DESC","isRotate","onClick","sortUsers","this","rowHeight","headerHeight","tableProps","width","height","rowClassName","tableRow","headerClassName","tableCellHeader","headerStyle","lineHeight","other","headerRenderer","cellRenderer","cellData","tableCell","join","React","PureComponent","UsersTable","useState","users","ASC","setUsers","Paper","paper","rowCount","length","rowGetter","sortByFieldNext","sortOrderNext","sort","a","b","state","numeric","defaultProps","EntityUserGroups","DialogAddUser","open","setOpen","department","setDepartment","name","setName","lastName","setLastName","handleCloseDialog","checkValidation","handleValidation","console","log","id","data","first_name","last_name","group","unshift","UsersListSetState","prevState","viewByGroup","Fab","color","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","type","required","value","error","onChange","event","target","FormControl","InputLabel","Select","labelId","MenuItem","Object","keys","el","DialogActions","UsersList","setState","getUsers","useEffect","CircularProgress","usersListWrapper","headerCaption","FormControlLabel","checkbox","control","Switch","checked","UsersListState","values","resultArrays","i","push","splitToSubArrays","idx","Welcome","textAlign","fontStyle","fontWeight","href","rel","App","withRouter","main","exact","path","githubLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7cef1dd1.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from '../../App/App.module.scss'\r\nimport { Button, ButtonGroup } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Welcome } from '../../pages/Welcome'\r\nimport { UsersList } from '../../pages/UsersList/UsersList'\r\nimport { EntityRoute } from './Navigation.interface'\r\n\r\nexport enum Pages {\r\n    welcome = '/welcome',\r\n    'user list' = '/user-list'\r\n}\r\n\r\nexport const routes: EntityRoute[] = [\r\n    {\r\n        text: 'welcome',\r\n        url: Pages.welcome,\r\n    },\r\n    {\r\n        text: 'user list',\r\n        url: Pages['user list'],\r\n    },\r\n]\r\n\r\nexport function Navigation(): JSX.Element {\r\n    return (\r\n        <nav className={styles.navigation}>\r\n            <ButtonGroup variant=\"contained\">\r\n                {routes.map((page: EntityRoute) => (\r\n                    <Button\r\n                        component={NavLink}\r\n                        to={page.url}\r\n                        variant=\"contained\"\r\n                        activeClassName=\"MuiButton-containedPrimary\"\r\n                        key={page.url}\r\n                    >\r\n                        {page.text}\r\n                    </Button>\r\n                ))}\r\n            </ButtonGroup>\r\n        </nav>\r\n    )\r\n}\r\n","import axios, { AxiosPromise } from 'axios'\r\nimport { EntityUser } from './api.interface'\r\n\r\n\r\nconst GET_USERS_URL_REMOTE: string = 'https://hjkasdfasdf.free.beeceptor.com/my/api/path'\r\nexport const GET_USERS_URL_SPARE = (process.env.NODE_ENV === 'production' ? '/Test-task-Benovate.ru' : '') + '/MOCK_DATA.json'\r\n\r\nexport function apiGetUsers(url: string = GET_USERS_URL_REMOTE): AxiosPromise<EntityUser[]> {\r\n    return axios({\r\n        method: 'get',\r\n        url: url,\r\n    })\r\n}\r\n","import { EntityUser } from '../../api/api.interface'\r\nimport { AppUserState } from '../../App/App.interface'\r\n\r\ndeclare module '@material-ui/core/styles/withStyles' {\r\n    // Augment the BaseCSSProperties so that we can control jss-rtl\r\n    interface BaseCSSProperties {\r\n        /*\r\n         * Used to control if the rule-set should be affected by rtl transformation\r\n         */\r\n        flip?: boolean;\r\n    }\r\n}\r\n\r\nexport enum SortTypes {\r\n    ASC,\r\n    DESC\r\n}\r\n\r\nexport interface UsersTableState {\r\n    users: EntityUser[];\r\n    sortByField: Exclude<keyof EntityUser, 'group'>;\r\n    sortOrder: SortTypes;\r\n}\r\n\r\nexport interface UsersTableProps {\r\n    users: EntityUser[];\r\n    setUsers: AppUserState['setUsers'];\r\n}\r\n\r\nexport type SortUsersHandler = (sortByFieldNext: UsersTableState['sortByField']) => void;\r\n","import React from 'react'\r\nimport { AutoSizer, Column, Table, TableHeaderProps, TableHeaderRowProps } from 'react-virtualized'\r\nimport styles from '../../UsersTable.module.scss'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport { TableRowProps } from 'react-virtualized/dist/es/Table'\r\nimport { MuiVirtualizedTableProps } from './MaterialUiVirtualizedTable.interface'\r\nimport { SortTypes } from '../../UsersTable.interface'\r\nimport { EntityUser } from '../../../../api/api.interface'\r\n\r\nexport class MaterialUIVirtualizedTable extends React.PureComponent<MuiVirtualizedTableProps> {\r\n    static defaultProps = {\r\n        headerHeight: 48,\r\n        rowHeight: 35,\r\n    }\r\n\r\n    private headerRowRenderer = ({ className, style, columns }: TableHeaderRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 className={className + ' ' + styles.tableRowHeader}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private rowRenderer = ({ className, style, columns, index, key }: TableRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 key={key}\r\n                 className={className + ' ' + (!(index % 2) ? styles.tableRowEven : '')}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private headerCellRenderer = (props: TableHeaderProps): JSX.Element => {\r\n        const { label, dataKey } = props as { label: string; dataKey: keyof EntityUser }\r\n        return (\r\n            <>\r\n                <span>{label}</span>\r\n                {\r\n                    dataKey !== 'group' ?\r\n                        <ArrowDownwardIcon\r\n                            className={\r\n                                (this.props.sortByField === dataKey ? styles.isActive : '') + ' ' +\r\n                                ((this.props.sortOrder === SortTypes.DESC) && (this.props.sortByField === dataKey) ? styles.isRotate : '')\r\n                            }\r\n                            onClick={() => this.props.sortUsers(dataKey)} />\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { columns, rowHeight, headerHeight, ...tableProps } = this.props\r\n\r\n        return (\r\n            <AutoSizer style={{ width: '100%' }}>\r\n                {({ height, width }: { height: number, width: number }): JSX.Element => (\r\n                    <Table\r\n                        height={height}\r\n                        width={width}\r\n                        rowHeight={rowHeight!}\r\n                        headerHeight={headerHeight!}\r\n                        rowClassName={styles.tableRow}\r\n                        headerClassName={styles.tableCellHeader}\r\n                        headerRowRenderer={this.headerRowRenderer}\r\n                        headerStyle={{ lineHeight: headerHeight + 'px' }}\r\n                        rowRenderer={this.rowRenderer}\r\n                        {...tableProps}\r\n                    >\r\n                        {columns.map(({ dataKey, ...other }, index) => {\r\n                            return (\r\n                                <Column\r\n                                    key={dataKey}\r\n                                    headerRenderer={this.headerCellRenderer}\r\n                                    cellRenderer={({ cellData }) => cellData}\r\n                                    dataKey={dataKey}\r\n                                    className={styles.tableCell}\r\n                                    headerClassName={[styles.tableCell, styles.tableCellHeader].join(' ')}\r\n                                    style={{ lineHeight: rowHeight + 'px' }}\r\n                                    {...other}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { SortTypes, SortUsersHandler, UsersTableProps, UsersTableState } from './UsersTable.interface'\r\nimport { EntityUser } from '../../api/api.interface'\r\nimport styles from './UsersTable.module.scss'\r\nimport { MaterialUIVirtualizedTable } from './children/MaterialUiVirtualizedTable/MaterialUiVirtualizedTable'\r\n\r\nfunction UsersTable(props: UsersTableProps) {\r\n\r\n    const [{ users, sortByField, sortOrder }, setUsers] = useState<UsersTableState>(\r\n        {\r\n            users: props.users,\r\n            sortOrder: SortTypes.ASC,\r\n            sortByField: 'id',\r\n        },\r\n    )\r\n\r\n    const sortUsersHandler: SortUsersHandler = (sortByFieldNext: UsersTableState['sortByField']): void => {\r\n        const sortByFieldPrev = sortByField\r\n        const sortOrderNext = sortByFieldNext === sortByFieldPrev && sortOrder === SortTypes.ASC ? SortTypes.DESC : SortTypes.ASC\r\n        users.sort((a: EntityUser, b: EntityUser) => {\r\n            if (a[sortByFieldNext] < b[sortByFieldNext]) {\r\n                return sortOrderNext === SortTypes.ASC ? -1 : 1\r\n            }\r\n            if (a[sortByFieldNext] > b[sortByFieldNext]) {\r\n                return sortOrderNext === SortTypes.ASC ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n\r\n        setUsers((state: UsersTableState): UsersTableState => ({\r\n            ...state,\r\n            users: users,\r\n            sortOrder: sortOrderNext,\r\n            sortByField: sortByFieldNext,\r\n        }))\r\n    }\r\n    return (\r\n        <Paper className={styles.paper}>\r\n            <MaterialUIVirtualizedTable\r\n                rowCount={users.length}\r\n                rowGetter={({ index }: { index: number }) => users[index]}\r\n                sortUsers={sortUsersHandler}\r\n                sortByField={sortByField}\r\n                sortOrder={sortOrder}\r\n                columns={[\r\n                    {\r\n                        width: 100,\r\n                        label: 'ID',\r\n                        dataKey: 'id',\r\n                        numeric: true,\r\n                    },\r\n                    {\r\n                        width: 300,\r\n                        label: 'Name',\r\n                        dataKey: 'first_name',\r\n                    },\r\n                    {\r\n                        width: 500,\r\n                        label: 'Last Name',\r\n                        dataKey: 'last_name',\r\n                    },\r\n                    {\r\n                        width: 500,\r\n                        label: 'Group',\r\n                        dataKey: 'group',\r\n                    },\r\n                ]}\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport { UsersTable }\r\n","export interface EntityUser {\r\n    readonly id: number,\r\n    readonly first_name: string,\r\n    readonly last_name: string,\r\n    readonly group: EntityUserGroups | null,\r\n}\r\n\r\nexport enum EntityUserGroups {\r\n    'Development department' = 'Development department',\r\n    Management = 'Management',\r\n    'Human Resources Department' = 'Human Resources Department',\r\n    'Accounting department' = 'Accounting department'\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { Fab, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\r\nimport { EntityUserGroups } from '../../api/api.interface'\r\nimport { DialogAddUserProps } from './DialogAddUser.interface'\r\nimport { AppUserState } from '../../App/App.interface'\r\nimport { UsersListState } from '../../pages/UsersList/UserList.interface'\r\n\r\nexport function DialogAddUser(props: DialogAddUserProps) {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [department, setDepartment] = React.useState<EntityUserGroups | ''>('')\r\n    const [name, setName] = React.useState<string>('')\r\n    const [lastName, setLastName] = React.useState<string>('')\r\n\r\n    const handleOpenDialog = () => {\r\n        setOpen(true)\r\n        setDepartment('')\r\n        setName('')\r\n        setLastName('')\r\n    }\r\n    const handleCloseDialog = (checkValidation: boolean = false ) => () => {\r\n        if (!checkValidation) {\r\n            setOpen(false)\r\n            return;\r\n        }\r\n        if ( handleValidation().name && handleValidation().name) {\r\n\r\n            props.setUsers((state: AppUserState['users']): AppUserState['users'] => {\r\n                console.log({\r\n                    id: state.data.length + 1,\r\n                    first_name: name,\r\n                    last_name: lastName,\r\n                    group: department || null,\r\n                })\r\n                state.data.unshift({\r\n                    id: state.data.length + 1,\r\n                    first_name: name,\r\n                    last_name: lastName,\r\n                    group: department || null,\r\n                })\r\n                return { data: state.data }\r\n            })\r\n            setOpen(false)\r\n            props.UsersListSetState((prevState: UsersListState): UsersListState =>\r\n                ({ viewByGroup: prevState.viewByGroup }))\r\n        }\r\n    }\r\n\r\n    const handleSelectDepartmentChange = (event: React.ChangeEvent<{ name?: string | undefined; value: unknown; }>): void => {\r\n        setDepartment(event.target.value as EntityUserGroups)\r\n    }\r\n\r\n    const handleSelectNameChange = (event: React.ChangeEvent<{ value: string }>): void => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleSelectLastNameChange = (event: React.ChangeEvent<{ value: string }>): void => {\r\n        setLastName(event.target.value)\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        return { name: !!(name.length), lastName: !!(lastName.length) }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Fab variant=\"extended\"\r\n                 color=\"secondary\"\r\n                 onClick={handleOpenDialog}\r\n            >\r\n                <PersonAddIcon />\r\n                <b>Add user</b>\r\n            </Fab>\r\n            <Dialog open={open}\r\n                    fullWidth\r\n                    onClose={handleCloseDialog()}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Add user\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField autoFocus\r\n                               margin=\"dense\"\r\n                               id=\"name\"\r\n                               label=\"Name\"\r\n                               type=\"text\"\r\n                               fullWidth\r\n                               required\r\n                               value={name}\r\n                               error={!handleValidation().name}\r\n                               onChange={handleSelectNameChange}\r\n                    />\r\n                    <TextField margin=\"dense\"\r\n                               id=\"lastName\"\r\n                               label=\"Last name\"\r\n                               type=\"text\"\r\n                               fullWidth\r\n                               required\r\n                               value={lastName}\r\n                               error={!handleValidation().lastName}\r\n                               onChange={handleSelectLastNameChange}\r\n                    />\r\n\r\n                    <FormControl fullWidth\r\n                                 margin=\"dense\">\r\n                        <InputLabel id=\"department\">\r\n                            Select department\r\n                        </InputLabel>\r\n                        <Select labelId=\"department\"\r\n                                id=\"department\"\r\n                                value={department}\r\n                                onChange={handleSelectDepartmentChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                None\r\n                            </MenuItem>\r\n                            {Object\r\n                                .keys(EntityUserGroups)\r\n                                .map((el: string): JSX.Element =>\r\n                                    <MenuItem value={EntityUserGroups[el as unknown as EntityUserGroups]}\r\n                                              key={el}>\r\n                                        {el}\r\n                                    </MenuItem>)\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialog()}\r\n                            color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleCloseDialog(true)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { apiGetUsers, GET_USERS_URL_SPARE } from '../../api/getUsers.api'\r\nimport { CircularProgress, FormControlLabel, Switch } from '@material-ui/core'\r\nimport { UsersTable } from '../../components/UsersTable/UsersTable'\r\nimport styles from './UsersList.module.scss'\r\nimport { DialogAddUser } from '../../components/DialogAddUser/DialogAddUser'\r\nimport { EntityUser, EntityUserGroups } from '../../api/api.interface'\r\nimport { SplitToSubArrays, SplitToSubArraysResult, UserListProps, UsersListState } from './UserList.interface'\r\n\r\nexport const UsersList = function(props: UserListProps): JSX.Element {\r\n\r\n    const { users, setUsers } = props\r\n\r\n    const [state, setState] = useState<UsersListState>({ viewByGroup: false })\r\n\r\n    const viewByGroupHandler = () => {\r\n        setState({ ...state, viewByGroup: !state.viewByGroup })\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        if (!users.data.length) {\r\n            const { data } = await apiGetUsers(GET_USERS_URL_SPARE)\r\n            setUsers({ data: data })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    })\r\n\r\n    if (!(users.data.length)) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    const splitToSubArrays: SplitToSubArrays = (users: EntityUser[]): SplitToSubArraysResult => {\r\n        const resultArrays: SplitToSubArraysResult = {\r\n            [EntityUserGroups['Accounting department']]: [],\r\n            [EntityUserGroups['Development department']]: [],\r\n            [EntityUserGroups['Human Resources Department']]: [],\r\n            [EntityUserGroups['Management']]: [],\r\n            empty: [],\r\n        }\r\n\r\n\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].group) {\r\n                resultArrays[users[i].group as EntityUserGroups].push(users[i])\r\n            } else {\r\n                resultArrays['empty'].push(users[i])\r\n            }\r\n        }\r\n\r\n        return resultArrays\r\n    }\r\n\r\n    return (\r\n        <div className={styles.usersListWrapper}>\r\n            <div className={styles.headerCaption}>\r\n                <i>\r\n                    Count of items: {users.data.length}\r\n                </i>\r\n                <FormControlLabel\r\n                    className={styles.checkbox}\r\n                    control={\r\n                        <Switch\r\n                            name=\"checkedB\"\r\n                            checked={state.viewByGroup}\r\n                            onChange={viewByGroupHandler}\r\n                        />\r\n                    }\r\n                    label=\"By groups\"\r\n                />\r\n                <DialogAddUser {...props} UsersListState={state} UsersListSetState={setState} />\r\n            </div>\r\n            {\r\n                state.viewByGroup ?\r\n                    Object\r\n                        .values(splitToSubArrays(users.data))\r\n                        .map((el, idx): JSX.Element => {\r\n                            return <UsersTable key={idx} {...props} users={[...el] as unknown as EntityUser[]} />\r\n                        })\r\n                    :\r\n                    <UsersTable {...props} users={users.data} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport function Welcome(): JSX.Element {\r\n    return (\r\n        <article style={{\r\n            textAlign: 'center',\r\n        }}>\r\n            <h1 style={{\r\n                fontStyle: 'italic',\r\n                fontWeight: 'normal',\r\n            }}>\r\n                Welcome to my test task!\r\n            </h1>\r\n            <a href=\"https://github.com/0ashen/Test-task-Benovate.ru\"\r\n               target=\"_blank\"\r\n               rel=\"noreferrer\">\r\n                Go to <b>GITHUB</b>\r\n            </a>\r\n        </article>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styles from './App.module.scss'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport { EntityUser } from '../api/api.interface'\r\nimport { Navigation, routes } from '../components/Navigation/Navigation'\r\nimport { UsersList } from '../pages/UsersList/UsersList'\r\nimport { Welcome } from '../pages/Welcome'\r\n\r\nfunction AppComponent(): JSX.Element {\r\n\r\n    const [users, setUsers] = useState<{ data: EntityUser[] }>({ data: [] })\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <main className={styles.main}>\r\n                <Switch>\r\n                    <Route exact\r\n                           path=\"/\">\r\n                        <Redirect to={routes[0].url} />\r\n                    </Route>\r\n                    <Route path={routes[0].url} key={routes[0].url}>\r\n                        <Welcome />\r\n                    </Route>\r\n                    <Route path={routes[1].url} key={routes[1].url}>\r\n                        <UsersList users={users} setUsers={setUsers} />\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n            <a className={styles.githubLink}\r\n               target=\"_blank\"\r\n               rel=\"noreferrer\"\r\n               href=\"https://github.com/0ashen/Test-task-Benovate.ru\">\r\n                <GitHubIcon />\r\n            </a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const App = withRouter(AppComponent)\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/styles/index.scss'\r\nimport { App } from './App/App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/Test-task-Benovate.ru' : '/'}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"UsersTable_paper__3sdua\",\"tableRow\":\"UsersTable_tableRow__1-re0\",\"tableRowHeader\":\"UsersTable_tableRowHeader__NR6Em\",\"tableRowEven\":\"UsersTable_tableRowEven__1tE6U\",\"tableCell\":\"UsersTable_tableCell__FaYyk\",\"tableCellHeader\":\"UsersTable_tableCellHeader__2Pvc2\",\"isActive\":\"UsersTable_isActive__1C-on\",\"isRotate\":\"UsersTable_isRotate__3JC7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"App_navigation__1MuY1\",\"main\":\"App_main__30TQO\",\"githubLink\":\"App_githubLink__1qpw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersListWrapper\":\"UsersList_usersListWrapper__3Impl\",\"headerCaption\":\"UsersList_headerCaption__12YXp\",\"checkbox\":\"UsersList_checkbox__3Wc6X\"};"],"sourceRoot":""}