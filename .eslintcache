[{"D:\\Projects\\Test-task-Benovate.ru\\src\\reportWebVitals.ts":"1","D:\\Projects\\Test-task-Benovate.ru\\src\\index.tsx":"2","D:\\Projects\\Test-task-Benovate.ru\\src\\App\\App.tsx":"3","D:\\Projects\\Test-task-Benovate.ru\\src\\api\\queries.ts":"4","D:\\Projects\\Test-task-Benovate.ru\\src\\api\\api.interface.ts":"5","D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Table\\children\\MaterialUiVirtualizedTable.tsx":"6","D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Table\\Table.tsx":"7","D:\\Projects\\Test-task-Benovate.ru\\src\\pages\\UsersList.tsx":"8","D:\\Projects\\Test-task-Benovate.ru\\src\\pages\\Welcome.tsx":"9","D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Navigation\\Navigation.tsx":"10"},{"size":440,"mtime":1606389930197,"results":"11","hashOfConfig":"12"},{"size":746,"mtime":1606389930195,"results":"13","hashOfConfig":"12"},{"size":1478,"mtime":1606389930188,"results":"14","hashOfConfig":"12"},{"size":400,"mtime":1606389930190,"results":"15","hashOfConfig":"12"},{"size":512,"mtime":1606389930189,"results":"16","hashOfConfig":"12"},{"size":3802,"mtime":1606278952150,"results":"17","hashOfConfig":"12"},{"size":3117,"mtime":1606389930194,"results":"18","hashOfConfig":"12"},{"size":944,"mtime":1606389930196,"results":"19","hashOfConfig":"12"},{"size":562,"mtime":1606389930196,"results":"20","hashOfConfig":"12"},{"size":1409,"mtime":1606389930192,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cs8ex1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Test-task-Benovate.ru\\src\\reportWebVitals.ts",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\index.tsx",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\App\\App.tsx",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\api\\queries.ts",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\api\\api.interface.ts",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Table\\children\\MaterialUiVirtualizedTable.tsx",["43"],"import React from 'react'\r\nimport { MuiVirtualizedTableProps, MyTableHeaderProps } from '../Table.interface'\r\nimport { AutoSizer, Column, Table, TableHeaderProps, TableHeaderRowProps } from 'react-virtualized'\r\nimport styles from '../Table.module.scss'\r\nimport { UserKeys } from '../../../api/api.interface'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport { TableRowProps } from 'react-virtualized/dist/es/Table'\r\n\r\nexport class MaterialUIVirtualizedTable extends React.Component<MuiVirtualizedTableProps> {\r\n    static defaultProps = {\r\n        headerHeight: 48,\r\n        rowHeight: 35,\r\n    }\r\n\r\n    private headerRowRenderer = ({ className, style, columns }: TableHeaderRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 className={className + ' ' + styles.tableRowHeader}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private rowRenderer = ({ className, style, columns, index }: TableRowProps): JSX.Element => {\r\n        return (\r\n            <div style={{ ...style, paddingRight: 0 }}\r\n                 className={className + ' ' + (!(index % 2) ? styles.tableRowEven : '')}>\r\n                {columns}\r\n            </div>\r\n        )\r\n    }\r\n    private headerCellRenderer = (props: TableHeaderProps): JSX.Element => {\r\n        const { label, dataKey, ...other } = props as MyTableHeaderProps\r\n        return (\r\n            <>\r\n                <span>{label}</span>\r\n                {\r\n                    dataKey !== UserKeys.group ?\r\n                        <ArrowDownwardIcon\r\n                            className={\r\n                                (this.props.sortByField === dataKey ? styles.isActive : '') + ' ' +\r\n                                ((this.props.sortOrder === 'DESC') && (this.props.sortByField === dataKey) ? styles.isRotate : '')\r\n                            }\r\n                            onClick={() => this.props.sortUsers(dataKey)} />\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    render(): JSX.Element {\r\n        const { columns, rowHeight, headerHeight, ...tableProps } = this.props\r\n        return (\r\n            <AutoSizer style={{ width: '100%' }}>\r\n                {({ height, width }) => (\r\n                    <Table\r\n                        height={height}\r\n                        width={width}\r\n                        rowHeight={rowHeight!}\r\n                        headerHeight={headerHeight!}\r\n                        rowClassName={styles.tableRow}\r\n                        headerClassName={styles.tableCellHeader}\r\n                        headerRowRenderer={this.headerRowRenderer}\r\n                        headerStyle={{ lineHeight: headerHeight + 'px' }}\r\n                        rowRenderer={this.rowRenderer}\r\n                        {...tableProps}\r\n                    >\r\n                        {columns.map(({ dataKey, ...other }, index) => {\r\n                            return (\r\n                                <Column\r\n                                    key={dataKey}\r\n                                    headerRenderer={this.headerCellRenderer}\r\n                                    cellRenderer={({ cellData }) => cellData}\r\n                                    dataKey={dataKey}\r\n                                    className={styles.tableCell}\r\n                                    headerClassName={[styles.tableCell, styles.tableCellHeader].join(' ')}\r\n                                    style={{ lineHeight: rowHeight + 'px' }}\r\n                                    {...other}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        )\r\n    }\r\n}\r\n","D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Table\\Table.tsx",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\pages\\UsersList.tsx",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\pages\\Welcome.tsx",[],"D:\\Projects\\Test-task-Benovate.ru\\src\\components\\Navigation\\Navigation.tsx",[],{"ruleId":"44","severity":1,"message":"45","line":32,"column":36,"nodeType":"46","messageId":"47","endLine":32,"endColumn":41},"@typescript-eslint/no-unused-vars","'other' is assigned a value but never used.","Identifier","unusedVar"]